{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "administratorLogin": {
            "type": "string",
            "defaultValue": ""
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        "collation": {
            "type": "string"
        },
        "databaseName": {
            "type": "string"
        },
        "tier": {
            "type": "string"
        },
        "skuName": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "maxSizeBytes": {
            "type": "int"
        },
        "serverName": {
            "type": "string"
        },
        "sampleName": {
            "type": "string",
            "defaultValue": ""
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false
        },
        "licenseType": {
            "type": "string",
            "defaultValue": ""
        },
        "readScaleOut": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "numberOfReplicas": {
            "type": "int",
            "defaultValue": 0
        },
        "minCapacity": {
            "type": "string",
            "defaultValue": ""
        },
        "autoPauseDelay": {
            "type": "string",
            "defaultValue": ""
        },
        "enableADS": {
            "type": "bool",
            "defaultValue": false
        },
        "allowAzureIps": {
            "type": "bool",
            "defaultValue": true
        },
        "databaseTags": {
            "type": "object",
            "defaultValue": {}
        },
        "serverTags": {
            "type": "object",
            "defaultValue": {}
        },
        "enableVA": {
            "type": "bool",
            "defaultValue": false
        },
        "useVAManagedIdentity": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "To enable vulnerability assessments, the user deploying this template must have an administrator or owner permissions."
            }
        },
        "allowClientIp": {
            "type": "bool",
            "defaultValue": false
        },
        "clientIpRuleName": {
            "type": "string",
            "defaultValue": ""
        },
        "clientIpValue": {
            "type": "string",
            "defaultValue": ""
        },
        "requestedBackupStorageRedundancy": {
            "type": "string",
            "defaultValue": ""
        },
        "maintenanceConfigurationId": {
            "type": "string",
            "defaultValue": ""
        },

        "identity": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Azure Active Directory identity of the server."
            }
        },
        "primaryUserAssignedIdentityId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "resource id of a user assigned identity to be used by default."
            }
        },
        "minimalTlsVersion": {
            "type": "string",
            "defaultValue": ""
        },
        "enableSqlLedger": {
            "type": "bool",
            "defaultValue": false
        },
        "connectionType": {
            "type": "string",
            "defaultValue": ""
        },
        "enableDigestStorage": {
            "type": "string",
            "defaultValue": ""
        },
        "digestStorageOption": {
            "type": "string",
            "defaultValue": ""
        },
        "digestStorageName": {
            "type": "string",
            "defaultValue": ""
        },
        "blobStorageContainerName": {
            "type": "string",
            "defaultValue": ""
        },
        "retentionDays": {
            "type": "string",
            "defaultValue": ""
        },
        "retentionPolicy": {
            "type": "bool",
            "defaultValue": true
        },
        "digestAccountResourceGroup": {
            "type": "string",
            "defaultValue": ""
        },
        "digestRegion": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccountdigestRegion": {
            "type": "string",
            "defaultValue": ""
        },
        "isNewDigestLocation": {
            "type": "bool",
            "defaultValue": false
        },
        "sqlLedgerTemplateLink": {
            "type": "string",
            "defaultValue": ""
        },
        "subscriptionId": {
            "type": "string"
        },
        "name": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "serverFarmResourceGroup": {
            "type": "string"
        },
        "alwaysOn": {
            "type": "bool"
        },
        "sku": {
            "type": "string"
        },
        "skuCode": {
            "type": "string"
        },
        "workerSize": {
            "type": "string"
        },
        "workerSizeId": {
            "type": "string"
        },
        "numberOfWorkers": {
            "type": "string"
        },
        "linuxFxVersion": {
            "type": "string"
        },
        "dockerRegistryUrl": {
            "type": "string"
        },
        "dockerRegistryUsername": {
            "type": "string"
        },
        "dockerRegistryPassword": {
            "type": "securestring"
        },
        "dockerRegistryStartupCommand": {
            "type": "string"
        },
        "importDatabase": {
            "type": "bool"
        },
        "storageAccountKey": {
            "type": "string",
            "metadata": {
                "description": "Specifies the key of the storage account where the BACPAC file is stored."
            }
        },
        "bacpacUrl": {
            "type": "string",
            "metadata": {
                "description": "Specifies the URL of the BACPAC file."
            }
        }
    },
    "resources": [
        {
            "condition": "[parameters('enableVA')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[variables('storageName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": "true",
                "allowBlobPublicAccess": "false"
            },
            "resources": [
                {
                    "condition": "[parameters('useVAManagedIdentity')]",
                    "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
                    "apiVersion": "2018-09-01-preview",
                    "name": "[concat(variables('storageName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid') )]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
                    ],
                    "properties": {
                        "roleDefinitionId": "[variables('StorageBlobContributor')]",
                        "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2018-06-01-preview', 'Full').identity.principalId]",
                        "scope": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
                        "principalType": "ServicePrincipal"
                    }
                }
            ]
        },
        {
            "apiVersion": "2020-11-01-preview",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "tags": "[parameters('serverTags')]",
            "name": "[parameters('serverName')]",
            "properties": {
                "version": "12.0",
                "minimalTlsVersion": "[parameters('minimalTlsVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "primaryUserAssignedIdentityId": "[parameters('primaryUserAssignedIdentityId')]"
            },
            "resources": [
                {
                    "apiVersion": "2021-02-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "tags": "[parameters('databaseTags')]",
                    "name": "[parameters('databaseName')]",
                    "properties": {
                        "collation": "[parameters('collation')]",
                        "maxSizeBytes": "[parameters('maxSizeBytes')]",
                        "sampleName": "[parameters('sampleName')]",
                        "zoneRedundant": "[parameters('zoneRedundant')]",
                        "licenseType": "[parameters('licenseType')]",
                        "readScale": "[parameters('readScaleOut')]",
                        "highAvailabilityReplicaCount": "[parameters('numberOfReplicas')]",
                        "minCapacity": "[parameters('minCapacity')]",
                        "autoPauseDelay": "[parameters('autoPauseDelay')]",
                        "requestedBackupStorageRedundancy": "[parameters('requestedBackupStorageRedundancy')]",
                        "isLedgerOn": "[parameters('enableSqlLedger')]",
                        "maintenanceConfigurationId": "[parameters('maintenanceConfigurationId')]"
                    },
                    "sku": {
                        "name": "[parameters('skuName')]",
                        "tier": "[parameters('tier')]"
                    },
                    "type": "databases",
                    "resources": [
                        {
                            "type": "extensions",
                            "apiVersion": "2014-04-01",
                            "name": "Import",
                            "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers/databases', parameters('serverName'), parameters('databaseName'))]"
                            ],
                            "condition": "[parameters('importDatabase')]",
                            "properties": {
                                "storageKeyType": "StorageAccessKey",
                                "storageKey": "[parameters('storageAccountKey')]",
                                "storageUri": "[parameters('bacpacUrl')]",
                                "administratorLogin": "[parameters('administratorLogin')]",
                                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                                "operationMode": "Import"
                            }
                        }
                    ]
                },
                {
                    "condition": "[parameters('allowAzureIps')]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    },
                    "type": "firewallrules"
                },
                {
                    "apiVersion": "2014-04-01",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "Default",
                    "properties": {
                        "connectionType": "[parameters('connectionType')]"
                    },
                    "type": "connectionPolicies"
                },
                {
                    "condition": "[parameters('allowClientIp')]",
                    "apiVersion": "2014-04-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "[parameters('clientIpRuleName')]",
                    "properties": {
                        "endIpAddress": "[parameters('clientIpValue')]",
                        "startIpAddress": "[parameters('clientIpValue')]"
                    },
                    "type": "firewallrules"
                },
                {
                    "condition": "[parameters('enableADS')]",
                    "apiVersion": "2017-03-01-preview",
                    "type": "securityAlertPolicies",
                    "name": "Default",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
                    ],
                    "properties": {
                        "state": "Enabled",
                        "disabledAlerts": [],
                        "emailAddresses": [],
                        "emailAccountAdmins": true
                    }
                },
                {
                    "condition": "[parameters('enableVA')]",
                    "apiVersion": "2018-06-01-preview",
                    "type": "vulnerabilityAssessments",
                    "name": "Default",
                    "properties": {
                        "storageContainerPath": "[if(parameters('enableVA'), concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                        "storageAccountAccessKey": "[if(and(parameters('enableVA'),not(parameters('useVAManagedIdentity'))), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
                        "recurringScans": {
                            "isEnabled": true,
                            "emailSubscriptionAdmins": true,
                            "emails": []
                        }
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                        "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                    ]
                }
            ],
            "identity": "[parameters('identity')]"
        },



        {
            "condition": "[equals(parameters('enableDigestStorage'), 'Enabled')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "name": "[concat('ledger-', parameters('digestStorageName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "enableDigestStorage": {
                        "value": "[parameters('enableDigestStorage')]"
                    },
                    "digestStorageOption": {
                        "value": "[parameters('digestStorageOption')]"
                    },
                    "digestStorageName": {
                        "value": "[parameters('digestStorageName')]"
                    },
                    "blobStorageContainerName": {
                        "value": "[parameters('blobStorageContainerName')]"
                    },
                    "retentionDays": {
                        "value": "[parameters('retentionDays')]"
                    },
                    "retentionPolicy": {
                        "value": "[parameters('retentionPolicy')]"
                    },
                    "serverName": {
                        "value": "[parameters('serverName')]"
                    },
                    "digestAccountResourceGroup": {
                        "value": "[parameters('digestAccountResourceGroup')]"
                    },
                    "databaseName": {
                        "value": "[parameters('databaseName')]"
                    },
                    "serverLocation": {
                        "value": "[parameters('location')]"
                    },
                    "digestRegion": {
                        "value": "[parameters('digestRegion')]"
                    },
                    "storageAccountdigestRegion": {
                        "value": "[parameters('storageAccountdigestRegion')]"
                    },
                    "isNewDigestLocation": {
                        "value": "[parameters('isNewDigestLocation')]"
                    }
                },
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[parameters('sqlLedgerTemplateLink')]"
                }
            },
            "subscriptionId": "[variables('subscriptionId')]",
            "resourceGroup": "[ variables('resourceGroupName')]"
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "tags": {},
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[parameters('dockerRegistryUrl')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('dockerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('dockerRegistryPassword')]"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        },
                        {
                            "name": "CONNECTION_STRING",
                            "value": "[variables('connectionString')]"
                        },
                        {
                            "name": "DEPLOYMENT_METHOD",
                            "value": "ARM Template"
                        }
                    ],
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",
                    "alwaysOn": "[parameters('alwaysOn')]"
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": false
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "kind": "linux",
            "tags": {},
            "dependsOn": [],
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerSize": "[parameters('workerSize')]",
                "workerSizeId": "[parameters('workerSizeId')]",
                "numberOfWorkers": "[parameters('numberOfWorkers')]",
                "reserved": true
            },
            "sku": {
                "Tier": "[parameters('sku')]",
                "Name": "[parameters('skuCode')]"
            }
        }
    ],
    "variables": {
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
        "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",





        "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('serverName')))]",
        "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "connectionString": "[concat('Server=tcp:', parameters('serverName'), '.database.windows.net,1433;Initial Catalog=', parameters('databaseName'), ';Persist Security Info=False;User ID=', parameters('administratorLogin'), ';Password=', parameters('administratorLoginPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
    }
}